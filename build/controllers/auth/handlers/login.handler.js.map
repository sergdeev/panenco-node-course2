{"version":3,"sources":["../../../../src/controllers/auth/handlers/login.handler.ts"],"sourcesContent":["import { Unauthorized, createAccessToken } from '@panenco/papi';\nimport { LoginBody } from '../../../contracts/login.body.js';\nimport { UserStore } from '../../users/handlers/user.store.js';\n\nexport const login = async (\n  body: LoginBody\n) => {\n  const user = UserStore.getByEmail(body.email);\n  if (!user || user.password !== body.password) {\n\t\tthrow new Unauthorized('unauthorized', 'Invalid credentials');\n\t}\n\n  const token = await createAccessToken('jwtSecretFromConfigHere', 60 * 10, {\n\t\tuserId: user.id,\n\t}); // Important this secret is also used for the authenticator initialization in app.ts\n\treturn token;\n};\n"],"names":["Unauthorized","createAccessToken","UserStore","login","body","user","getByEmail","email","password","token","userId","id"],"mappings":"AAAA,SAASA,YAAY,EAAEC,iBAAiB,QAAQ,gBAAgB;AAEhE,SAASC,SAAS,QAAQ,qCAAqC;AAE/D,OAAO,MAAMC,QAAQ,OACnBC;IAEA,MAAMC,OAAOH,UAAUI,UAAU,CAACF,KAAKG,KAAK;IAC5C,IAAI,CAACF,QAAQA,KAAKG,QAAQ,KAAKJ,KAAKI,QAAQ,EAAE;QAC9C,MAAM,IAAIR,aAAa,gBAAgB;IACxC;IAEC,MAAMS,QAAQ,MAAMR,kBAAkB,2BAA2B,KAAK,IAAI;QAC1ES,QAAQL,KAAKM,EAAE;IAChB,IAAI,oFAAoF;IACxF,OAAOF;AACR,EAAE"}