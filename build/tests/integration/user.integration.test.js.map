{"version":3,"sources":["../../../src/tests/integration/user.integration.test.ts"],"sourcesContent":["import { expect } from \"chai\";\nimport { beforeEach, describe, it } from \"mocha\";\nimport supertest from \"supertest\";\n\nimport { App } from \"../../app.js\";\nimport {\n\tUser,\n\tUserStore\n} from \"../../controllers/users/handlers/user.store.js\";\nimport { StatusCode } from \"@panenco/papi\";\nimport { UserBody } from \"../../contracts/user.body.js\";\n\ndescribe(\"Integration tests\", () => {\n\tdescribe(\"User Tests\", () => {\n\t\tlet request: supertest.SuperTest<supertest.Test>;\n\t\tbeforeEach(() => {\n\t\t\tUserStore.users = [];\n\t\t\tconst app = new App();\n\n\t\t\trequest = supertest(app.host);\n\t\t});\n\n\t\tit(\"should CRUD users\", async () => {\n\t\t\t// Unauthorized without \"api-key\"\n\t\t\tawait request.get(`/api/users`).expect(StatusCode.unauthorized);\n\n\t\t\tconst creds = {\n\t\t\t\temail: \"test-user+1@panenco.com\",\n\t\t\t\tpassword: \"real secret stuff\",\n\t\t\t}\n\n\t\t\t// Successfully create new user\n\t\t\tconst {body: createResponse} = await request\n\t\t\t\t.post(`/api/users`)\n\t\t\t\t.send({\n\t\t\t\t\tname: \"test\",\n\t\t\t\t\t...creds,\n\t\t\t\t} as User)\n\t\t\t\t.expect(StatusCode.created);\n\n\t\t\texpect(UserStore.users.some((x) => x.email === createResponse.email))\n\t\t\t\t.true;\n\n\t\t\t// Get the token\n\t\t\tconst {body: loginResponse} = await request\n\t\t\t\t.post(`/api/auth/tokens`)\n\t\t\t\t.send(creds as User)\n\t\t\t\t.expect(StatusCode.ok);\n\n\t\t\tconst token = loginResponse.token;\n\t\t\t\n\t\t\t// Get the newly created user\n\t\t\tconst {body: getResponse} = await request\n\t\t\t\t.get(`/api/users/${createResponse.id}`)\n\t\t\t\t.set('x-auth', token)\n\t\t\t\t.expect(StatusCode.ok);\n\t\t\texpect(getResponse.name).equal(\"test\");\n\n\t\t\t// Successfully update user\n\t\t\tconst {body: updateResponse} = await request\n\t\t\t\t.patch(`/api/users/${createResponse.id}`)\n\t\t\t\t.set('x-auth', token)\n\t\t\t\t.send({\n\t\t\t\t\temail: \"test-user+updated@panenco.com\",\n\t\t\t\t} as User)\n\t\t\t\t.expect(StatusCode.ok);\n\n\t\t\texpect(updateResponse.name).equal(\"test\");\n\t\t\texpect(updateResponse.email).equal(\"test-user+updated@panenco.com\");\n\t\t\texpect(updateResponse.password).undefined; // middleware transformed the object to not include the password\n\n\t\t\t// Get all users\n\t\t\tconst {body: getListRes} = await request\n\t\t\t\t.get(`/api/users`)\n\t\t\t\t.set('x-auth', token)\n\t\t\t\t.expect(StatusCode.ok);\n\t\t\tconst {items, count} = getListRes;\n\t\t\texpect(items.length).equal(1);\n\t\t\texpect(count).equal(1);\n\n\t\t\t// Delete the newly created user\n\t\t\tawait request.delete(`/api/users/${createResponse.id}`).set('x-auth', token).expect(204);\n\n\t\t\t// Get all users again after deleted the only user\n\t\t\tconst {body: getNoneResponse} = await request\n\t\t\t\t.get(`/api/users`)\n\t\t\t\t.set('x-auth', token)\n\t\t\t\t.expect(StatusCode.ok);\n\n\t\t\texpect(getNoneResponse.items.length).equal(0);\n\t\t\texpect(getNoneResponse.count).equal(0);\n\t\t});\n\t});\n});\n"],"names":["expect","beforeEach","describe","it","supertest","App","UserStore","StatusCode","request","users","app","host","get","unauthorized","creds","email","password","body","createResponse","post","send","name","created","some","x","true","loginResponse","ok","token","getResponse","id","set","equal","updateResponse","patch","undefined","getListRes","items","count","length","delete","getNoneResponse"],"mappings":"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"}